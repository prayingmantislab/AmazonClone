type Reminder @model @auth(rules: [{allow: public}]) {
  id: ID!
  event: String
  date: AWSDate!
  Recipients: [Recipient] @manyToMany(relationName: "ReminderRecipient")
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  CartProducts: [CartProduct] @hasMany(indexName: "byOrder", fields: ["id"])
}

type Recipient @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  relation: String!
  birthDay: AWSDate
  address: String!
  interests: [String!]
  reminders: [Reminder] @manyToMany(relationName: "ReminderRecipient")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String!
  lastName: String!
  phoneNumber: AWSPhone!
  birthDay: AWSDate
  sex: String
  city: String
  email: AWSEmail!
  password: String
}

type Product @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  description: String
  image: String!
  images: [String!]!
  options: [String!]
  avgRating: Float
  ratings: Int
  price: Float!
  oldPrice: Float
}

type CartProduct @model @auth(rules: [{allow: public}]) {
  id: ID!
  userSub: String!
  quantity: Int!
  option: String
  productID: ID!
  product: Product @hasOne(fields: ["productID"])
  orderID: ID! @index(name: "byOrder")
}
 